import curry2 from "./internal/curry2";
import _keyValue from "./internal/key_value";
import pluck from "./pluck";
import comparator from "./comparator";

/**
 * Sorts the list according to a key generated by the supplied function.
 *
 * @func
 * @memberOf R
 * @category relation
 * @param {Function} fn The function mapping `list` items to keys.
 * @param {Array} list The list to sort.
 * @return {Array} A new list sorted by the keys generated by `fn`.
 * @example
 *
 *      var sortByFirstItem = sortBy(nth(0));
 *      var sortByNameCaseInsensitive = sortBy(compose(toLowerCase, prop('name')));
 *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];
 *      sortByFirstItem(pairs); //= [[-3, 3], [-2, 2], [-1, 1]]
 *      var alice = {
 *         name: 'ALICE',
 *         age: 101
 *      };
 *      var bob = {
 *         name: 'Bob',
 *        age: -10
 *      };
 *      var clara = {
 *        name: 'clara',
 *        age: 314.159
 *      };
 *      var people = [clara, bob, alice];
 *      sortByNameCaseInsensitive(people); //= [alice, bob, clara]
 */
var sortBy = curry2(function _sortBy(fn, list) {
    return pluck('val', _keyValue(fn, list).sort(comparator(function(a, b) { return a.key < b.key; })));
});

export default sortBy;
